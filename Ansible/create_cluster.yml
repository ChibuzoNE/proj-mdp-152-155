---
- name: Create Kubernetes cluster with KOPS
  hosts: k8s_workers
  become: yes
  strategy: free
  vars_files:
    - group_vars/all.yml
  vars:
    ssh_key_path: "/home/ec2-user/.ssh/id_rsa.pub"  # Full explicit path
    kops_version: "1.28.0"
    kops_download_path: "/usr/local/bin/kops"

  tasks:
    - name: Verify SSH key exists
      stat:
        path: "{{ ssh_key_path }}"
      register: ssh_key_stat
      ignore_errors: yes

    - name: Fail if SSH key is missing
      fail:
        msg: "SSH public key not found at {{ ssh_key_path }}"
      when: not ssh_key_stat.stat.exists

    - name: Copy SSH key to root's home
      become: yes
      copy:
        src: "{{ ssh_key_path }}"
        dest: "/root/.ssh/id_rsa.pub"
        owner: root
        group: root
        mode: '0600'
      when: ssh_key_stat.stat.exists

    - name: Install required packages
      package:
        name:
          - curl
          - unzip
          - python3-pip
        state: present
      async: 300
      poll: 15

    - name: Install AWS CLI via pip
      pip:
        name: awscli
        state: present
      when: ansible_python.version.major == 3

    - name: Download and install KOPS
      block:
        - name: Download KOPS binary
          get_url:
            url: "https://github.com/kubernetes/kops/releases/download/v{{ kops_version }}/kops-linux-amd64"
            dest: /tmp/kops
            mode: '0755'
            timeout: 60
          register: download_result
          until: download_result is succeeded
          retries: 3
          delay: 10

        - name: Install KOPS
          copy:
            src: /tmp/kops
            dest: "{{ kops_download_path }}"
            remote_src: yes
            mode: '0755'
            owner: root
            group: root

      rescue:
        - name: Clean up on failure
          file:
            path: /tmp/kops
            state: absent
          ignore_errors: yes

    - name: Configure cluster (run once)
      delegate_to: "{{ groups['k8s_workers'][0] }}"
      run_once: yes
      shell: |
        set -o pipefail
        export KOPS_STATE_STORE={{ state_store }}
        {{ kops_download_path }} create cluster \
          --name={{ cluster_name }} \
          --zones={{ zones|join(',') }} \
          --node-count={{ node_count }} \
          --control-plane-size={{ master_size }} \
          --ssh-public-key=/root/.ssh/id_rsa.pub \
          --yes 2>&1 | tee /tmp/kops_create.log
      environment:
        AWS_DEFAULT_REGION: "{{ aws_region }}"
