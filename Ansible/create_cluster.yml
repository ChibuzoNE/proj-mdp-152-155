---
- name: Create Kubernetes Cluster with kOps
  hosts: k8s
  become: yes
  vars_files:
    - group_vars/all.yml
  environment:
    KOPS_STATE_STORE: "{{ kops_state_store }}"

  tasks:

    - name: "Check if kOps binary exists"
      stat:
        path: /usr/local/bin/kops
      register: kops_bin

    - name: "Download kOps if not installed"
      when: not kops_bin.stat.exists
      get_url:
        url: https://github.com/kubernetes/kops/releases/latest/download/kops-linux-amd64
        dest: /usr/local/bin/kops
        mode: '0755'

    - name: "Verify kOps is installed"
      stat:
        path: /usr/local/bin/kops
      register: kops_bin_final

    - name: "Fail if kOps is still not installed"
      fail:
        msg: "kOps is not installed at /usr/local/bin/kops"
      when: not kops_bin_final.stat.exists

    - name: "Debug: Show kOps binary info"
      debug:
        msg: "kOps is installed at /usr/local/bin/kops"

    - name: "Check if Kops cluster already exists"
      shell: >
        /usr/local/bin/kops get cluster
        --name {{ kops_cluster_name }}
        --state {{ kops_state_store }}
      register: kops_cluster_check
      ignore_errors: true
      environment:
        KOPS_STATE_STORE: "{{ kops_state_store }}"

    - name: "Create Kubernetes Cluster (if not exists)"
      shell: >
        /usr/local/bin/kops create cluster
        --name {{ kops_cluster_name }}
        --cloud aws
        --zones {{ zones }}
        --master-size {{ master_size }}
        --node-size {{ node_size }}
        --node-count {{ node_count }}
        --topology private
        --dns private
        --networking calico
        --state {{ kops_state_store }}
      when: kops_cluster_check.rc != 0
      environment:
        KOPS_STATE_STORE: "{{ kops_state_store }}"

    - name: "Update and build the cluster"
      shell: >
        /usr/local/bin/kops update cluster
        --name {{ kops_cluster_name }}
        --yes
        --state {{ kops_state_store }}
      when: kops_cluster_check.rc != 0
      environment:
        KOPS_STATE_STORE: "{{ kops_state_store }}"
